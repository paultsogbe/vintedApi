{"version":3,"sources":["isAuthenticated.js"],"names":["User","require","isAuthenticated","req","res","next","headers","authorization","token","replace","findOne","select","user","status","json","message","module","exports"],"mappings":";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,gBAAD,CAApB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,eAGhBF,GAAG,CAACG,OAAJ,CAAYC,aAHI;AAAA;AAAA;AAAA;;AAIlB;AACMC,UAAAA,KALY,GAKJL,GAAG,CAACG,OAAJ,CAAYC,aAAZ,CAA0BE,OAA1B,CAAkC,SAAlC,EAA6C,EAA7C,CALI,EAMlB;;AANkB;AAAA,0CAOCT,IAAI,CAACU,OAAL,CAAa;AAAEF,YAAAA,KAAK,EAAEA;AAAT,WAAb,EAA+BG,MAA/B,CAAsC,aAAtC,CAPD;;AAAA;AAOZC,UAAAA,IAPY;;AAAA,eASdA,IATc;AAAA;AAAA;AAAA;;AAUhB;AACAT,UAAAA,GAAG,CAACS,IAAJ,GAAWA,IAAX,CAXgB,CAYhB;;AACAP,UAAAA,IAAI;AAbY;AAAA;;AAAA;AAAA,2CAgBTD,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,YAAAA,OAAO,EAAE;AADiB,WAArB,CAhBS;;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAsBXX,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,YAAAA,OAAO,EAAE;AADiB,WAArB,CAtBW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA2BpBX,UAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,OAAO,EAAE,YAAMA;AAAjB,WAArB;;AA3BoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AA+BAC,MAAM,CAACC,OAAP,GAAiBf,eAAjB","sourcesContent":["const User = require(\"../models/User\");\n\nconst isAuthenticated = async (req, res, next) => {\n  try {\n    // Si on reçoit bien un token\n    if (req.headers.authorization) {\n      // j'enleve \"Bearer \" du token reçu\n      const token = req.headers.authorization.replace(\"Bearer \", \"\");\n      // Cherche dans la BDD un user qui a ce token en ne récupérant que les clef account et _id\n      const user = await User.findOne({ token: token }).select(\"account _id\");\n      // Si on en trouve un\n      if (user) {\n        // On rajoute une clef user à req contenant le user trouvé\n        req.user = user;\n        // On passe à la suite\n        next();\n      } else {\n        // Sinon on répond une erreur 401\n        return res.status(401).json({\n          message: \"Unauthorized\",\n        });\n      }\n    } else {\n      // Sinon on répond une erreur 401\n      return res.status(401).json({\n        message: \"Unauthorized\",\n      });\n    }\n  } catch (error) {\n    res.status(500).json({ message: error.message });\n  }\n};\n\nmodule.exports = isAuthenticated;\n"],"file":"isAuthenticated.dev.js"}